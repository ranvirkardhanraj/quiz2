from tkinter import *
from tkinter import ttk
from tkinter import messagebox
import pymysql
con = pymysql.connect(host="db4free.net", database="feedback_dhanraj", user="dhanrajranvirkar", password="Dhanraj@007.com",port=3306 )
base=Tk()
base.geometry("650x550")
base.title("Worker Management System")
fill=False
def addworker():
    blanklabel=Label(base,text="",bg="white",width=89,height=25)
    blanklabel.place(x=10,y=120)
    workernamel=Label(base,text="Name:",bg="white",font=("ArialBold",13))
    workernamel.place(x=15,y=130)
    workernameen=Entry(base)
    workernameen.place(x=150,y=130)
    workermidnamel = Label(base, text="MidName:", bg="white", font=("ArialBold", 13))
    workermidnamel.place(x=15, y=160)
    workermidnameen = Entry(base)
    workermidnameen.place(x=150, y=160)
    workerlistnamel = Label(base, text="LastName:", bg="white", font=("ArialBold", 13))
    workerlistnamel.place(x=15, y=190)
    workerlistnameen = Entry(base)
    workerlistnameen.place(x=150, y=190)
    workeridl = Label(base, text="Give Id:", bg="white", font=("ArialBold", 13))
    workeridl.place(x=15, y=220)
    workeriden = Entry(base)
    workeriden.place(x=150, y=220)
    workeraddrl = Label(base, text="Adresses:", bg="white", font=("ArialBold", 13))
    workeraddrl.place(x=15, y=250)
    workeraddren = Entry(base)
    workeraddren.place(x=150, y=250)
    workerphnol = Label(base, text="Phone:", bg="white", font=("ArialBold", 13))
    workerphnol.place(x=15, y=280)
    workerphnoen = Entry(base)
    workerphnoen.place(x=150, y=280)
    statusl=Label(base,text="",bg="white", font=("ArialBold", 13))
    statusl.place(x=15,y=350)

    def addindatabase():
        nameg = workernameen.get()
        workeridg = workeriden.get()
        workermidnameg = workermidnameen.get()
        workerlastnameg = workerlistnameen.get()
        workeraddg = workeraddren.get()
        workerphg = workerphnoen.get()
        qdata="select giveid from worker_add"
        cur1=con.cursor()
        cur1.execute(qdata)
        giveidd=cur1.fetchall()

        cur1.close()
        dd=[]
        for i in giveidd:
            for i2 in i:
                dd.append(i2)

        if dd.__contains__(int(workeridg)):
            messagebox.showerror("message", "worker already present please try again")
            workernameen.delete(0, END)
            workeriden.delete(0, END)
            workermidnameen.delete(0, END)
            workerlistnameen.delete(0, END)
            workeraddren.delete(0, END)
            workerphnoen.delete(0, END)

        else:
            quary = "insert into worker_add (name,midname,lastname,giveid,address,phone) values ('" + nameg + "','" + workermidnameg + "','" + workerlastnameg + "'," + workeridg + ",'" + workeraddg + "'," + workerphg + ")"
            cur = con.cursor()
            cur.execute(quary)
            con.commit()
            cur.close()
            workernameen.delete(0, END)
            workeriden.delete(0, END)
            workermidnameen.delete(0, END)
            workerlistnameen.delete(0, END)
            workeraddren.delete(0, END)
            workerphnoen.delete(0, END)
            messagebox.showinfo("added", "Worker Data Added")


    addb=Button(base,text="ADD",command=addindatabase,width=15,font=("Arial Bold",10),bg="yellow")
    addb.place(x=15,y=320)
workeraddb=Button(base,text="ADD Worker",bg="white",command=addworker)
def addcolor(event):
    workeraddb.configure(bg="red")
workeraddb.bind("<Enter>",addcolor)
def adddecolor(event):
    workeraddb.configure(bg="white")
workeraddb.bind("<Leave>",adddecolor)
workeraddb.place(x=1,y=1)
def workerdeb():
    blanklabel = Label(base, text="", bg="white", width=89, height=25)
    blanklabel.place(x=10, y=120)
    listbobd=Listbox(base,selectmode=SINGLE)
    listbobd.place(x=20,y=130)
    namel = Label(base, text="Name:", font=("Arial Bold", 10), bg="white")
    namel.place(x=180, y=130)
    midnamel = Label(base, text="Midname:", font=("Arial Bold", 10), bg="white")
    midnamel.place(x=180, y=160)
    lastnamel = Label(base, text="lastname:", font=("Arial Bold", 10), bg="white")
    lastnamel.place(x=180, y=190)
    addrnamel = Label(base, text="Address:", font=("Arial Bold", 10), bg="white")
    addrnamel.place(x=180, y=220)
    phnamel = Label(base, text="Contect No.:", font=("Arial Bold", 10), bg="white")
    phnamel.place(x=180, y=250)
    nameshow=Label(base,text="Name",bg="white")
    nameshow.place(x=290,y=130)
    midnameshow = Label(base, text="MidName",bg="white")
    midnameshow.place(x=290, y=160)
    lastnameshow = Label(base, text="LastName",bg="white")
    lastnameshow.place(x=290, y=190)
    addrshow = Label(base, text="Address",bg="white")
    addrshow.place(x=290, y=220)
    phoneshow = Label(base, text="Phone No.",bg="white")
    phoneshow.place(x=290, y=250)
    global fill
    if fill == False:
        quary = "Select giveid from worker_add"
        cur = con.cursor()
        cur.execute(quary)
        data = cur.fetchall()
        i = 1
        for d1 in data:
            listbobd.insert(i, d1)
            i = i + 1
        cur.close()

    def showdetails(event):
        workerid = listbobd.selection_get()
        quary = "select name,midname,lastname,address,phone from worker_add where giveid=" + workerid
        cur = con.cursor()
        cur.execute(quary)
        data = cur.fetchone()
        cur.close()

        nameshow.configure(text=data[0])
        midnameshow.configure(text=data[1])
        lastnameshow.configure(text=data[2])
        addrshow.configure(text=data[3])
        phoneshow.configure(text=data[4])
    listbobd.bind("<ButtonRelease>",showdetails)
allwokerdetailsb=Button(base,text="Details",bg="white",command=workerdeb)

def allworkercolor(event):
    allwokerdetailsb.configure(bg="red")
allwokerdetailsb.bind("<Enter>",allworkercolor)
def allworkerde(event):
    allwokerdetailsb.configure(bg="white")
allwokerdetailsb.bind("<Leave>",allworkerde)
allwokerdetailsb.place(x=75,y=1)
def search():
    blanklabel = Label(base, text="", bg="white", width=89, height=25)
    blanklabel.place(x=10, y=120)
    namel = Label(base, text="Name:", font=("Arial Bold", 10), bg="white")
    namel.place(x=180, y=130)
    midnamel = Label(base, text="Midname:", font=("Arial Bold", 10), bg="white")
    midnamel.place(x=180, y=160)
    lastnamel = Label(base, text="lastname:", font=("Arial Bold", 10), bg="white")
    lastnamel.place(x=180, y=190)
    addrnamel = Label(base, text="Address:", font=("Arial Bold", 10), bg="white")
    addrnamel.place(x=180, y=220)
    phnamel = Label(base, text="Contect No.:", font=("Arial Bold", 10), bg="white")
    phnamel.place(x=180, y=250)
    nameshow = Label(base, text="Name", bg="white")
    nameshow.place(x=290, y=130)
    midnameshow = Label(base, text="MidName", bg="white")
    midnameshow.place(x=290, y=160)
    lastnameshow = Label(base, text="LastName", bg="white")
    lastnameshow.place(x=290, y=190)
    addrshow = Label(base, text="Address", bg="white")
    addrshow.place(x=290, y=220)
    phoneshow = Label(base, text="Phone No.", bg="white")
    phoneshow.place(x=290, y=250)
    labelsearch=Label(base,text="Enter label ID:",font=("Arial Bold",12),fg="blue",bg="white")
    labelsearch.place(x=150,y=300)
    searchentry=Entry(base)
    searchentry.place(x=280,y=300)
    def firetosearch():
        workerid=searchentry.get()
        quary="select name,midname,lastname,address,phone from worker_add where giveid="+workerid
        cur=con.cursor()
        cur.execute(quary)
        data=cur.fetchone()
        cur.close()
        nameshow.configure(text=data[0])
        midnameshow.configure(text=data[1])
        lastnameshow.configure(text=data[2])
        addrshow.configure(text=data[3])
        phoneshow.configure(text=data[4])
        searchentry.delete(0,END)
    searchbutton=Button(base,text="Search",font=("Arial Bold",12),bg="white",fg="yellow",command=firetosearch)
    searchbutton.place(x=250,y=340)
searchworkerb=Button(base,text="Search",bg="white",command=search)
def searworkcolor(event):
    searchworkerb.configure(bg="red")
searchworkerb.bind("<Enter>",searworkcolor)
def searworkdecolor(event):
    searchworkerb.configure(bg="white")
searchworkerb.bind("<Leave>",searworkdecolor)
searchworkerb.place(x=119,y=1)

def accd():
    blanklabel = Label(base, text="", bg="white", width=89, height=25)
    blanklabel.place(x=10, y=120)
    workernamel=Label(base,text="Full Name:",font=("Arial Bold",12),bg="white")
    workernamel.place(x=20,y=180)
    workernameen=Entry(base,width=50)
    workernameen.place(x=180,y=180)
    workerbanknamel = Label(base, text="Bank Name:", font=("Arial Bold", 12), bg="white")
    workerbanknamel.place(x=20, y=210)
    workerbanknameen = Entry(base, width=50)
    workerbanknameen.place(x=180, y=210)
    workernamel = Label(base, text="Branch:", font=("Arial Bold", 12), bg="white")
    workernamel.place(x=20, y=240)
    workerbranchen = Entry(base, width=50)
    workerbranchen.place(x=180, y=240)
    workernamel = Label(base, text="IFSC code:", font=("Arial Bold", 12), bg="white")
    workernamel.place(x=20, y=270)
    workerifscen = Entry(base, width=50)
    workerifscen.place(x=180, y=270)
    workernamel = Label(base, text="Account No.:", font=("Arial Bold", 12), bg="white")
    workernamel.place(x=20, y=300)
    workeraccnoen = Entry(base, width=50)
    workeraccnoen.place(x=180, y=300)
    workernamel = Label(base, text="Linked Mobile No.:", font=("Arial Bold", 12), bg="white")
    workernamel.place(x=20, y=330)
    workerlinkmoen = Entry(base, width=50)
    workerlinkmoen.place(x=180, y=330)
    workernamel = Label(base, text="E-mail:", font=("Arial Bold", 12), bg="white")
    workernamel.place(x=20, y=360)
    workeremailen = Entry(base, width=50)
    workeremailen.place(x=180, y=360)
    def addacc():
        fullname=workernameen.get()
        bankname=workerbanknameen.get()
        branch=workerbranchen.get()
        ifsc=workerifscen.get()
        accno=workeraccnoen.get()
        linkmo=workerlinkmoen.get()
        email=workeremailen.get()
        quary="insert into acc_details values('"+fullname+"','"+bankname+"','"+branch+"','"+ifsc+"',"+accno+","+linkmo+",'"+email+"')"
        cur=con.cursor()
        cur.execute(quary)
        con.commit()
        cur.close()
        workernameen.delete(0,END)
        workerbanknameen.delete(0,END)
        workerbranchen.delete(0,END)
        workerifscen.delete(0,END)
        workeraccnoen.delete(0,END)
        workerlinkmoen.delete(0,END)
        workeremailen.delete(0,END)
        messagebox.showinfo("message","Bank Account of worker "+fullname+" Added")
    accbutton=Button(base,text="Acc. ADD",font=("Arial Bold", 12), bg="white",fg="blue",command=addacc)
    accbutton.place(x=20,y=400)
workerbankaccb=Button(base,text="Acc. Details",bg="white",command=accd)
def workeracccolor(event):
    workerbankaccb.configure(bg="red")
workerbankaccb.bind("<Enter>",workeracccolor)
def workeraccdecolor(event):
    workerbankaccb.configure(bg="white")
workerbankaccb.bind("<Leave>",workeraccdecolor)
workerbankaccb.place(x=164,y=1)
def qualification():
    blanklabel = Label(base, text="", bg="white", width=89, height=25)
    blanklabel.place(x=10, y=120)
    qualil=Label(base,text="Full Name:",font=("Arial Bold",12),bg="white")
    qualil.place(x=10,y=130)
    qualil = Label(base, text="SSC Marks:", font=("Arial Bold", 12), bg="white")
    qualil.place(x=10, y=160)
    qualil = Label(base, text="HSC Marks:", font=("Arial Bold", 12), bg="white")
    qualil.place(x=10, y=190)
    qualil = Label(base, text="Degree:", font=("Arial Bold", 12), bg="white")
    qualil.place(x=10, y=220)
    qualil = Label(base, text="Job Name:", font=("Arial Bold", 12), bg="white")
    qualil.place(x=10, y=250)
    qualinameen=Entry(base,width=40)
    qualinameen.place(x=140,y=130)
    qualisscen = Entry(base, width=30)
    qualisscen.place(x=140, y=160)
    qualihscen = Entry(base, width=30)
    qualihscen.place(x=140, y=190)
    qualidegreeen = Entry(base, width=30)
    qualidegreeen.place(x=140, y=220)
    qualijoben = Entry(base, width=30)
    qualijoben.place(x=140, y=250)
    def storedata():
        name=qualinameen.get()
        ssc=qualisscen.get()
        hsc=qualihscen.get()
        degree=qualidegreeen.get()
        job=qualidegreeen.get()
        quary="insert into qualification values ('"+name+"',"+ssc+","+hsc+",'"+degree+"','"+job+"')"
        cur=con.cursor()
        cur.execute(quary)
        con.commit()
        cur.close()
        qualinameen.delete(0,END)
        qualisscen.delete(0,END)
        qualihscen.delete(0,END)
        qualidegreeen.delete(0,END)
        qualijoben.delete(0,END)
        messagebox.showinfo("message","Qualification Data store")
    qualibutton=Button(base,text="ADD",font=("Arial Bold",10),bg="red",fg="yellow",width=30,command=storedata)
    qualibutton.place(x=10,y=300)
workerqualificationb=Button(base,text="Qualification",bg="white",command=qualification)
def workerqualicolor(event):
    workerqualificationb.configure(bg="red")
workerqualificationb.bind("<Enter>",workerqualicolor)
def workerqualidecolor(event):
    workerqualificationb.configure(bg="white")
workerqualificationb.bind("<Leave>",workerqualidecolor)
workerqualificationb.place(x=234,y=1)
def deleteworker():
    blanklabel = Label(base, text="", bg="white", width=89, height=25)
    blanklabel.place(x=10, y=120)
    qualil = Label(base, text="Enter Id:", font=("Arial Bold", 12), bg="white")
    qualil.place(x=10, y=130)
    deleteworkeride=Entry(base)
    deleteworkeride.place(x=140,y=130)
    qualil = Label(base, text="Phone No.:", font=("Arial Bold", 12), bg="white")
    qualil.place(x=10, y=160)
    deleteworkerphonee=Entry(base)
    deleteworkerphonee.place(x=140,y=160)
    def deleteworkerfromdata():
        workerid = deleteworkeride.get()
        workerphone = deleteworkerphonee.get()
        quary="select giveid,phone from worker_add"
        cur=con.cursor()
        cur.execute(quary)
        data=cur.fetchall()
        cur.close()
        listdata=[]
        for d1 in data:
            for d2 in d1:
                listdata.append(d2)
        if listdata.__contains__(int(workerid) and int(workerphone)):
            quary1="delete from worker_add where giveid="+workerid
            cur1=con.cursor()
            cur1.execute(quary1)
            con.commit()
            cur1.close()
            messagebox.showinfo("message","Worker Deleted")
            deleteworkeride.delete(0,END)
            deleteworkerphonee.delete(0,END)
        else:
            messagebox.showerror("message","worker is not of id='"+workerid+"'")
    deletebut=Button(base,text="Delete",width=30,font=("Arial Bold",12),bg="white",fg="red",command=deleteworkerfromdata)
    deletebut.place(x=10,y=200)
workerdeleteb=Button(base,text="Delete",bg="white",command=deleteworker)
def delcolor(event):
    workerdeleteb.configure(bg="red")
workerdeleteb.bind("<Enter>",delcolor)
def deledecolor(event):
    workerdeleteb.configure(bg="white")
workerdeleteb.bind("<Leave>",deledecolor)
workerdeleteb.place(x=310,y=1)
def exitc():
    con.close()
    exit(0)
exitb=Button(base,text="Exit",fg="blue",width=50,bg="yellow",command=exitc)
exitb.place(x=353,y=1)
headline1=Label(base,text="Worker Management System",font=("Arial Bold",12),fg="green")
headline1.place(x=190,y=50)
headline2=Label(base,text="Select Above Button",font=("Arial Bold",8),fg="green")
headline2.place(x=230,y=80)
base.mainloop()